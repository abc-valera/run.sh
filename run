#!/usr/bin/env bash

# MIT License
#
# Copyright (c) 2022 Jan Heuermann, https://www.jotaen.net
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

# Setup configuration and globals.
RUN_FILE='./run.sh'
IS_VERBOSE='false'
COMMAND=()

COMMENT_PATTERN='^#{1,}[[:blank:]]?(.*)$'
TASK_DEF_PATTERN_1='^[[:blank:]]*run_([a-zA-Z0-9_]+)[[:blank:]]*\([[:blank:]]*\)'
TASK_DEF_PATTERN_2='^[[:blank:]]*function[[:blank:]]*run_([a-zA-Z0-9_]+)'

cmd_help() {
	echo 'Run tasks from a run.sh file.'
	echo
	echo 'Usage: run [OPTION] TASK [INPUT...]'
	echo
	echo 'Options:'
	echo '  -f, --file       Specify the task file (default: ./run.sh)'
	echo '  -h, --help       Print this help'
	echo '  -i, --info task  Show task description'
	echo '  -l, --list       List all available tasks'
	echo '  -v, --verbose    Print task command before executing'
	echo '      --version    Print version of this command'
}

cmd_version() {
	echo 'Version 1.0-rc1'
}

cmd_list() {
	TITLE_CANDIDATE=""
	TASKS=()
	TITLES=()
	LONGEST_TASK_NAME=0 # Used for aligning the output.

	while IFS= read -r line; do
		# Process comment block.
		if [[ "${line}" =~ $COMMENT_PATTERN ]]; then
			if [[ -z "${TITLE_CANDIDATE}" ]]; then
				COMMENT_TEXT="${BASH_REMATCH[1]}"
				TITLE_CANDIDATE="${COMMENT_TEXT}"
			fi
			continue
		fi

		# After a comment block, there must be the task definition.
		# Allow both styles of command definition `run_foo() {...` and `function run_foo {`.
		if [[ "${line}" =~ $TASK_DEF_PATTERN_1 || "${line}" =~ $TASK_DEF_PATTERN_2 ]]; then
			TASK="${BASH_REMATCH[1]}"
			TASKS+=("${TASK}")
			TITLES+=("${TITLE_CANDIDATE}")
			if [[ ${#TASK} -gt $LONGEST_TASK_NAME ]]; then
				LONGEST_TASK_NAME=${#TASK}
			fi
		fi

		# Reset parser.
		TITLE_CANDIDATE=""
	done < "${RUN_FILE}"

	for (( i=0; i<${#TASKS[@]}; i++ ));
	do
		PADDING=0
		if [[ "${TITLES[$i]}" != "" ]]; then
			PADDING=$((LONGEST_TASK_NAME+3))
		fi
		printf "%-${PADDING}s%s\n" "${TASKS[$i]}" "${TITLES[$i]}"
	done
}

cmd_info() {
	REQUESTED_TASK="$1"
	INFO_CANDIDATE=()

	while IFS= read -r line; do
		if [[ "${line}" =~ $COMMENT_PATTERN ]]; then
			INFO_CANDIDATE+=("${BASH_REMATCH[1]}")
			continue
		fi
		if [[ "${line}" =~ $TASK_DEF_PATTERN_1 || "${line}" =~ $TASK_DEF_PATTERN_2 ]]; then
			if [[ "${BASH_REMATCH[1]}" == "${REQUESTED_TASK}" ]]; then
				for i in "${INFO_CANDIDATE[@]}"; do
					echo "${i}"
				done
				exit
			fi
		fi
		INFO_CANDIDATE=()
	done < "${RUN_FILE}"
	echo "No such task: ${REQUESTED_TASK}" >&2
	exit 1
}

cmd_execute() {
	readonly TASK="run_$1"
	readonly INPUT=( "${@:2}" )

	# Load “run” file with task definitions.
	# shellcheck source=./run.sh
	source "${RUN_FILE}"

	# Check that subcommand is defined.
	TYPE=$(type -t "${TASK}")
	if [[ "${TYPE}" != 'function' ]]; then
		echo "No such task: $1" >&2
		exit 1
	fi

	# Activate verbose mode (if requested).
	if "${IS_VERBOSE}"; then
		set -o xtrace
	fi

	# Invoke subcommand and pass all additional arguments.
	"${TASK}" "${INPUT[@]}"
}

# Parse CLI arguments.
if [[ $# -eq 0 ]]; then
	cmd_help
	exit
fi
while [[ $# -gt 0 ]]; do
	case $1 in
		--help|-h)
			cmd_help
			exit
			;;
		--version)
			cmd_version
			exit
			;;
		--list|--ls|-l)
			COMMAND=( cmd_list )
			shift
			continue
			;;
		--info=*|-i=*)
			COMMAND=( cmd_info "${1#*=}" )
			shift
			continue
			;;
		--info|-i)
			COMMAND=( cmd_info "$2" )
			shift
			shift
			continue
			;;
		--file=*|-f=*)
			RUN_FILE="${1#*=}"
			shift
			continue
			;;
		--file|-f)
			RUN_FILE="$2"
			shift
			shift
			continue
			;;
		--verbose|-v)
			IS_VERBOSE='true'
			shift
			continue
			;;
		-*)
			echo "Unknown option $1" >&2
			exit 1
			;;
		*)
			COMMAND=( cmd_execute "$1" "${@:2}" )
			break
			;;
	esac
done

readonly RUN_FILE
readonly IS_VERBOSE
readonly COMMAND

# If a run file is given, check that it exists.
if [[ -n "${RUN_FILE}" && ! -f "${RUN_FILE}" ]]; then
	echo "No such file: ${RUN_FILE}" >&2
	exit 2
fi

if [[ -z "${COMMAND}" ]]; then
	echo 'No task specified' >&2
	exit 1
fi

# Execute command.
"${COMMAND[@]}"
